package com.github.GTNH2Mega.fromScripts;
import gttweaker.mods.gregtech.machines.Assembler;
import gttweaker.mods.gregtech.machines.ChemicalBath;
import gttweaker.mods.gregtech.machines.ChemicalReactor;
import gttweaker.mods.gregtech.machines.Mixer;
import java.util.HashMap;
import minetweaker.MineTweakerAPI;
import minetweaker.api.data.IData;
import minetweaker.api.item.IIngredient;
import minetweaker.api.item.IItemStack;
import minetweaker.api.liquid.ILiquidStack;
import minetweaker.api.oredict.IOreDictEntry;
import minetweaker.expand.ExpandAnyDict;
import minetweaker.expand.ExpandByte;
import minetweaker.expand.ExpandFloat;
import minetweaker.expand.ExpandInt;
import minetweaker.mc1710.brackets.ItemBracketHandler;
import minetweaker.mc1710.brackets.LiquidBracketHandler;
import minetweaker.mc1710.brackets.OreBracketHandler;
import modtweaker2.mods.thaumcraft.handlers.Infusion;
import modtweaker2.mods.thaumcraft.handlers.Research;
import modtweaker2.mods.thaumcraft.handlers.Warp;
import static com.github.GTNH2Mega.VoltageLevels.*;
public class OpenBlocks
implements Runnable {
    public void run() {
        IItemStack iItemStack = ItemBracketHandler.getItem("OpenBlocks:hangglider", 0);
        IItemStack iItemStack2 = ItemBracketHandler.getItem("OpenBlocks:generic", 0);
        IItemStack iItemStack3 = ItemBracketHandler.getItem("OpenBlocks:luggage", 0);
        IItemStack iItemStack7 = ItemBracketHandler.getItem("minecraft:iron_bars", 0);
        IItemStack iItemStack8 = ItemBracketHandler.getItem("minecraft:stone_slab", 3);
        IItemStack iItemStack9 = ItemBracketHandler.getItem("gregtech:gt.metaitem.02", 21057);
        IItemStack iItemStack10 = ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 32601);
        IItemStack iItemStack11 = ItemBracketHandler.getItem("minecraft:hopper", 0);
        IOreDictEntry iOreDictEntry3 = OreBracketHandler.getOre("stickSteel");
        IItemStack iItemStack13 = ItemBracketHandler.getItem("IC2:blockLuminatorDark", 0);
        IOreDictEntry iOreDictEntry12 = OreBracketHandler.getOre("lensDiamond");
        IOreDictEntry iOreDictEntry13 = OreBracketHandler.getOre("stoneObsidian");
        IOreDictEntry iOreDictEntry15 = OreBracketHandler.getOre("itemLeather");
        IItemStack iItemStack16 = ItemBracketHandler.getItem("OpenBlocks:guide", 0);
        IItemStack iItemStack17 = ItemBracketHandler.getItem("OpenBlocks:blockPlacer", 0);
        IItemStack iItemStack18 = ItemBracketHandler.getItem("OpenBlocks:blockbreaker", 0);
        IItemStack iItemStack19 = ItemBracketHandler.getItem("OpenBlocks:itemDropper", 0);
        IItemStack iItemStack20 = ItemBracketHandler.getItem("Backpack:tannedLeather", 0);
        MineTweakerAPI.recipes.remove(iItemStack);
        MineTweakerAPI.recipes.remove(iItemStack2);
        MineTweakerAPI.recipes.remove(iItemStack3);
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:autoenchantmenttable", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:autoanvil", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:xpdrain", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:path", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:fan", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:elevator", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:vacuumhopper", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:sprinkler", 0));
        MineTweakerAPI.recipes.remove(iItemStack16);
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:builder_guide", 0));
        MineTweakerAPI.recipes.remove(iItemStack17);
        MineTweakerAPI.recipes.remove(iItemStack18);
        MineTweakerAPI.recipes.remove(iItemStack19);
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:sleepingBag", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:ropeladder", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:ladder", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:beartrap", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:cannon", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:sponge", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:goldenegg", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:village_highlighter", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:sky", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:sky", 1));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:projector", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:paintmixer", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:canvas", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:xpbottler", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:generic", 10));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:generic", 11));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:drawingtable", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:imaginary", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:imaginary", 1));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:xpshower", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:scaffolding", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:craneControl", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:generic", 1));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:generic", 2));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:generic", 3));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:generic", 5));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:craneBackpack", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:generic", 6));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:generic", 7));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:emptyMap", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:generic", 9));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:cartographer", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:slimalyzer", 0));
        MineTweakerAPI.recipes.removeShaped(ItemBracketHandler.getItem("OpenBlocks:paintBrush", 0), null);
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:sonicglasses", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:devnull", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:pedometer", 0));
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:tastyClay", 0));
        MineTweakerAPI.recipes.removeShaped(ItemBracketHandler.getItem("OpenBlocks:goldenEye", 32767), null);
        MineTweakerAPI.recipes.remove(ItemBracketHandler.getItem("OpenBlocks:cursor", 0));
        MineTweakerAPI.recipes.addShaped(iItemStack, new IIngredient[][]{{OreBracketHandler.getOre("screwSteel"), OreBracketHandler.getOre("screwSteel"), OreBracketHandler.getOre("screwSteel")}, {iItemStack2, OreBracketHandler.getOre("plateSteel"), iItemStack2}, {OreBracketHandler.getOre("craftingToolWrench"), OreBracketHandler.getOre("screwSteel"), OreBracketHandler.getOre("craftingToolScrewdriver")}}, null);
        MineTweakerAPI.recipes.addShaped(iItemStack2, new IIngredient[][]{{OreBracketHandler.getOre("craftingToolHardHammer"), iOreDictEntry3, iOreDictEntry15}, {iOreDictEntry3, iItemStack20, iOreDictEntry15}, {iOreDictEntry15, iOreDictEntry15, iOreDictEntry15}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:autoanvil", 0), new IIngredient[][]{{OreBracketHandler.getOre("blockStainlessSteel"), OreBracketHandler.getOre("blockStainlessSteel"), OreBracketHandler.getOre("blockStainlessSteel")}, {OreBracketHandler.getOre("screwStainlessSteel"), ItemBracketHandler.getItem("Railcraft:anvil", 0), OreBracketHandler.getOre("screwStainlessSteel")}, {OreBracketHandler.getOre("plateRedAlloy"), OreBracketHandler.getOre("blockRedstone"), OreBracketHandler.getOre("plateRedAlloy")}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:xpdrain", 0), new IIngredient[][]{{OreBracketHandler.getOre("screwAnyIron"), OreBracketHandler.getOre("stickAnyIron"), OreBracketHandler.getOre("screwAnyIron")}, {OreBracketHandler.getOre("stickAnyIron"), iItemStack7, OreBracketHandler.getOre("stickAnyIron")}, {OreBracketHandler.getOre("screwAnyIron"), OreBracketHandler.getOre("stickAnyIron"), OreBracketHandler.getOre("screwAnyIron")}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:path", 0).amount(4), new IIngredient[][]{{iItemStack8, null, iItemStack8}, {null, iItemStack8, null}, {iItemStack8, null, iItemStack8}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:fan", 0), new IIngredient[][]{{iItemStack7, iItemStack9, iItemStack7}, {OreBracketHandler.getOre("screwSteel"), OreBracketHandler.getOre("plateAnyIron"), OreBracketHandler.getOre("screwSteel")}, {OreBracketHandler.getOre("plateAnyIron"), iItemStack10, OreBracketHandler.getOre("plateAnyIron")}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:elevator", 0), new IIngredient[][]{{OreBracketHandler.getOre("plateSteel"), OreBracketHandler.getOre("plateEnderPearl"), OreBracketHandler.getOre("plateSteel")}, {OreBracketHandler.getOre("gearGtSmallSteel"), ItemBracketHandler.getItem("gregtech:gt.blockmachines", 4115), OreBracketHandler.getOre("gearGtSmallSteel")}, {OreBracketHandler.getOre("plateSteel"), OreBracketHandler.getOre("plateSteel"), OreBracketHandler.getOre("plateSteel")}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 0), new IIngredient[][]{{null, OreBracketHandler.getOre("stickSteel"), null}, {OreBracketHandler.getOre("gearGtSmallSteel"), ItemBracketHandler.getItem("OpenBlocks:elevator", 0), OreBracketHandler.getOre("gearGtSmallSteel")}, {OreBracketHandler.getOre("craftingToolScrewdriver"), OreBracketHandler.getOre("stickSteel"), OreBracketHandler.getOre("craftingToolFile")}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 0), new IIngredient[][]{{OreBracketHandler.getOre("craftingToolScrewdriver"), OreBracketHandler.getOre("stickSteel"), OreBracketHandler.getOre("craftingToolFile")}, {OreBracketHandler.getOre("gearGtSmallSteel"), ItemBracketHandler.getItem("OpenBlocks:elevator", 0), OreBracketHandler.getOre("gearGtSmallSteel")}, {null, OreBracketHandler.getOre("stickSteel"), null}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:vacuumhopper", 0), new IIngredient[][]{{OreBracketHandler.getOre("plateObsidian"), iItemStack11, OreBracketHandler.getOre("plateObsidian")}, {iItemStack11, OreBracketHandler.getOre("plateEnderPearl"), iItemStack11}, {OreBracketHandler.getOre("plateObsidian"), iItemStack11, OreBracketHandler.getOre("plateObsidian")}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:sprinkler", 0), new IIngredient[][]{{ItemBracketHandler.getItem("dreamcraft:item.AluminiumBars", 0), OreBracketHandler.getOre("stickGold"), ItemBracketHandler.getItem("dreamcraft:item.AluminiumBars", 0)}, {OreBracketHandler.getOre("pipeSmallDarkSteel"), OreBracketHandler.getOre("rotorDarkSteel"), OreBracketHandler.getOre("pipeSmallDarkSteel")}, {ItemBracketHandler.getItem("dreamcraft:item.AluminiumBars", 0), OreBracketHandler.getOre("stickGold"), ItemBracketHandler.getItem("dreamcraft:item.AluminiumBars", 0)}}, null);
        MineTweakerAPI.recipes.addShaped(iItemStack16, new IIngredient[][]{{iOreDictEntry13, iItemStack13, iOreDictEntry13}, {iItemStack13, iOreDictEntry12, iItemStack13}, {iOreDictEntry13, iItemStack13, iOreDictEntry13}}, null);
        MineTweakerAPI.recipes.addShapeless(ItemBracketHandler.getItem("OpenBlocks:blockPlacer", 0), new IIngredient[]{ItemBracketHandler.getItem("ProjRed|Expansion:projectred.expansion.machine2", 2)}, null);
        MineTweakerAPI.recipes.addShapeless(ItemBracketHandler.getItem("OpenBlocks:blockbreaker", 0), new IIngredient[]{ItemBracketHandler.getItem("ProjRed|Expansion:projectred.expansion.machine2", 0)}, null);
        MineTweakerAPI.recipes.addShaped(iItemStack19, new IIngredient[][]{{OreBracketHandler.getOre("plateStone"), OreBracketHandler.getOre("wireGt01RedAlloy"), OreBracketHandler.getOre("plateStone")}, {OreBracketHandler.getOre("gearGtSmallSteel"), ItemBracketHandler.getItem("minecraft:dropper", 0), OreBracketHandler.getOre("gearGtSmallSteel")}, {OreBracketHandler.getOre("plateStone"), ItemBracketHandler.getItem("minecraft:hopper", 0), OreBracketHandler.getOre("plateStone")}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:beartrap", 0), new IIngredient[][]{{ItemBracketHandler.getItem("dreamcraft:item.SteelBars", 0), OreBracketHandler.getOre("craftingToolHardHammer"), ItemBracketHandler.getItem("dreamcraft:item.SteelBars", 0)}, {OreBracketHandler.getOre("screwSteel"), OreBracketHandler.getOre("plateSteel"), OreBracketHandler.getOre("screwSteel")}, {ItemBracketHandler.getItem("dreamcraft:item.SteelBars", 0), OreBracketHandler.getOre("craftingToolScrewdriver"), ItemBracketHandler.getItem("dreamcraft:item.SteelBars", 0)}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:cannon", 0), new IIngredient[][]{{OreBracketHandler.getOre("craftingToolSaw"), OreBracketHandler.getOre("pipeLargeSteel"), OreBracketHandler.getOre("craftingToolHardHammer")}, {OreBracketHandler.getOre("gearGtSmallWood"), OreBracketHandler.getOre("plateSteel"), OreBracketHandler.getOre("gearGtSmallWood")}, {ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 17809), OreBracketHandler.getOre("wireGt01RedAlloy"), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 17809)}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:village_highlighter", 0), new IIngredient[][]{{ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 17809), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 17809), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 17809)}, {ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 17809), OreBracketHandler.getOre("plateEmerald"), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 17809)}, {OreBracketHandler.getOre("plateStone"), OreBracketHandler.getOre("plateStone"), OreBracketHandler.getOre("plateStone")}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:sky", 0).amount(6), new IIngredient[][]{{ItemBracketHandler.getItem("TConstruct:GlassPane", 0), OreBracketHandler.getOre("plateEnderEye"), ItemBracketHandler.getItem("TConstruct:GlassPane", 0)}, {ItemBracketHandler.getItem("TConstruct:GlassPane", 0), OreBracketHandler.getOre("stoneEndstone"), ItemBracketHandler.getItem("TConstruct:GlassPane", 0)}, {ItemBracketHandler.getItem("TConstruct:GlassPane", 0), OreBracketHandler.getOre("plateEnderEye"), ItemBracketHandler.getItem("TConstruct:GlassPane", 0)}}, null);
        MineTweakerAPI.recipes.addShapeless(ItemBracketHandler.getItem("OpenBlocks:sky", 0), new IIngredient[]{ItemBracketHandler.getItem("OpenBlocks:sky", 1)}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:projector", 0), new IIngredient[][]{{OreBracketHandler.getOre("screwSteel"), OreBracketHandler.getOre("craftingToolScrewdriver"), OreBracketHandler.getOre("screwSteel")}, {OreBracketHandler.getOre("craftingRedstoneTorch"), ItemBracketHandler.getItem("OpenComputers:hologram1", 0), OreBracketHandler.getOre("craftingRedstoneTorch")}, {OreBracketHandler.getOre("craftingRedstoneTorch"), ItemBracketHandler.getItem("minecraft:stone_slab", 0), OreBracketHandler.getOre("craftingRedstoneTorch")}}, null);
        MineTweakerAPI.recipes.addShapeless(ItemBracketHandler.getItem("OpenBlocks:canvas", 0), new IIngredient[]{ItemBracketHandler.getItem("BiblioCraft:item.PaintingCanvas", 0)}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:drawingtable", 0), new IIngredient[][]{{ItemBracketHandler.getItem("OpenBlocks:generic", 10), ItemBracketHandler.getItem("OpenBlocks:generic", 11), ItemBracketHandler.getItem("OpenBlocks:generic", 10)}, {ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 17809), ItemBracketHandler.getItem("minecraft:crafting_table", 0), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 17809)}, {OreBracketHandler.getOre("screwSteel"), OreBracketHandler.getOre("craftingToolScrewdriver"), OreBracketHandler.getOre("screwSteel")}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:xpshower", 0), new IIngredient[][]{{OreBracketHandler.getOre("itemCasingAnyIron"), OreBracketHandler.getOre("pipeSmallSteel"), OreBracketHandler.getOre("itemCasingAnyIron")}, {OreBracketHandler.getOre("itemCasingAnyIron"), OreBracketHandler.getOre("pipeSmallSteel"), OreBracketHandler.getOre("itemCasingAnyIron")}, {OreBracketHandler.getOre("pipeSmallSteel"), OreBracketHandler.getOre("pipeSmallSteel"), OreBracketHandler.getOre("pipeSmallSteel")}}, null);
        MineTweakerAPI.recipes.addShapeless(ItemBracketHandler.getItem("OpenBlocks:scaffolding", 0), new IIngredient[]{ItemBracketHandler.getItem("gregtech:gt.blockmachines", 4905)}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:generic", 9), new IIngredient[][]{{ItemBracketHandler.getItem("ProjectBlue:miniatureLamp", 14), OreBracketHandler.getOre("plateEnderEye"), ItemBracketHandler.getItem("ProjectBlue:miniatureLamp", 14)}, {ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 32600), OreBracketHandler.getOre("circuitBasic"), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 32600)}, {OreBracketHandler.getOre("rotorAluminium"), OreBracketHandler.getOre("plateEnderEye"), OreBracketHandler.getOre("rotorAluminium")}}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:slimalyzer", 0), new IIngredient[][]{{OreBracketHandler.getOre("screwIron"), OreBracketHandler.getOre("circuitBasic"), OreBracketHandler.getOre("screwIron")}, {OreBracketHandler.getOre("itemCasingAnyIron"), ItemBracketHandler.getItem("TConstruct:materials", 1), OreBracketHandler.getOre("itemCasingAnyIron")}, {OreBracketHandler.getOre("craftingToolScrewdriver"), OreBracketHandler.getOre("circuitBasic"), OreBracketHandler.getOre("craftingToolFile")}}, null);
        MineTweakerAPI.recipes.addShapeless(ItemBracketHandler.getItem("OpenBlocks:paintBrush", 0), new IIngredient[]{ItemBracketHandler.getItem("BuildCraft|Core:paintbrush", 0)}, null);
        MineTweakerAPI.recipes.addShaped(ItemBracketHandler.getItem("OpenBlocks:sonicglasses", 0), new IIngredient[][]{{OreBracketHandler.getOre("wireGt01RedAlloy"), ItemBracketHandler.getItem("GalacticraftCore:item.basicItem", 19), OreBracketHandler.getOre("wireGt01RedAlloy")}, {OreBracketHandler.getOre("circuitBasic"), ItemBracketHandler.getItem("minecraft:iron_helmet", 0).amount(1), OreBracketHandler.getOre("circuitBasic")}, {OreBracketHandler.getOre("screwAluminium"), OreBracketHandler.getOre("craftingToolScrewdriver"), OreBracketHandler.getOre("screwAluminium")}}, null);
        Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:ropeladder", 0).amount(64), ItemBracketHandler.getItem("minecraft:string", 0).amount(64), ItemBracketHandler.getItem("gregtech:gt.metaitem.02", 22809).amount(64), 600,ULV);
      Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:ladder", 0), ItemBracketHandler.getItem("minecraft:trapdoor", 0), ItemBracketHandler.getItem("minecraft:ladder", 0), 200,LV);
      Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:sky", 1), ItemBracketHandler.getItem("OpenBlocks:sky", 0), ItemBracketHandler.getItem("gregtech:gt.integrated_circuit", 1).amount(0), LiquidBracketHandler.getLiquid("molten.redstone").withAmount(144), 200, LV);
      Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:paintmixer", 0), ItemBracketHandler.getItem("gregtech:gt.blockmachines", 581), OreBracketHandler.getOre("itemCasingAnyIron").amount(4), 600,LV);
      Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:xpbottler", 0), ItemBracketHandler.getItem("Forestry:factory", 0), OreBracketHandler.getOre("itemCasingAnyIron").amount(4), 600,LV);
      Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:generic", 10), ItemBracketHandler.getItem("TConstruct:blankPattern", 0), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 17032), 200, LV);
      Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:generic", 11), ItemBracketHandler.getItem("minecraft:stick", 0), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 1865), LiquidBracketHandler.getLiquid("molten.rubber").withAmount(144), 100,ULV);
      IItemStack iItemStack22 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 0);
        HashMap<String, IData> hashMap = new HashMap<>();
        hashMap.put("Uses", ExpandFloat.asData((float)10.0));
        Assembler.addRecipe(iItemStack22.withTag(ExpandAnyDict.asData(hashMap)), ItemBracketHandler.getItem("OpenBlocks:generic", 11), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 17533), 100, LV);
      Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:generic", 6), ItemBracketHandler.getItem("gregtech:gt.metaitem.03", 32106), ItemBracketHandler.getItem("IC2:itemPartCircuit", 0), LiquidBracketHandler.getLiquid("molten.redstone").withAmount(144), 300,LV);
      Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:generic", 7), ItemBracketHandler.getItem("OpenBlocks:generic", 6), ItemBracketHandler.getItem("IC2:itemPartCircuit", 0), LiquidBracketHandler.getLiquid("molten.redstone").withAmount(144), 400,LV);
      IItemStack iItemStack23 = ItemBracketHandler.getItem("OpenBlocks:emptyMap", 0);
        HashMap<String, IData> hashMap2 = new HashMap<>();
        hashMap2.put("Scale", ExpandByte.asData((byte)0));
        Assembler.addRecipe(iItemStack23.withTag(ExpandAnyDict.asData(hashMap2)), ItemBracketHandler.getItem("OpenBlocks:generic", 6), ItemBracketHandler.getItem("OpenBlocks:generic", 7).amount(4), 600,LV);
      IItemStack iItemStack24 = ItemBracketHandler.getItem("OpenBlocks:emptyMap", 0);
        HashMap<String, IData> hashMap3 = new HashMap<>();
        hashMap3.put("Scale", ExpandByte.asData((byte)1));
        IItemStack iItemStack25 = iItemStack24.withTag(ExpandAnyDict.asData(hashMap3));
        IItemStack iItemStack26 = ItemBracketHandler.getItem("OpenBlocks:emptyMap", 0);
        HashMap<String, IData> hashMap4 = new HashMap<>();
        hashMap4.put("Scale", ExpandByte.asData((byte)0));
        Assembler.addRecipe(iItemStack25, iItemStack26.withTag(ExpandAnyDict.asData(hashMap4)), ItemBracketHandler.getItem("IC2:itemPartCircuit", 0), LiquidBracketHandler.getLiquid("molten.tin").withAmount(144), 600,LV);
      IItemStack iItemStack27 = ItemBracketHandler.getItem("OpenBlocks:emptyMap", 0);
        HashMap<String, IData> hashMap5 = new HashMap<>();
        hashMap5.put("Scale", ExpandByte.asData((byte)2));
        IItemStack iItemStack28 = iItemStack27.withTag(ExpandAnyDict.asData(hashMap5));
        IItemStack iItemStack29 = ItemBracketHandler.getItem("OpenBlocks:emptyMap", 0);
        HashMap<String, IData> hashMap6 = new HashMap<>();
        hashMap6.put("Scale", ExpandByte.asData((byte)1));
        Assembler.addRecipe(iItemStack28, iItemStack29.withTag(ExpandAnyDict.asData(hashMap6)), ItemBracketHandler.getItem("IC2:itemPartCircuit", 0).amount(2), LiquidBracketHandler.getLiquid("molten.redstone").withAmount(144), 800,LV);
      IItemStack iItemStack30 = ItemBracketHandler.getItem("OpenBlocks:emptyMap", 0);
        HashMap<String, IData> hashMap7 = new HashMap<>();
        hashMap7.put("Scale", ExpandByte.asData((byte)3));
        IItemStack iItemStack31 = iItemStack30.withTag(ExpandAnyDict.asData(hashMap7));
        IItemStack iItemStack32 = ItemBracketHandler.getItem("OpenBlocks:emptyMap", 0);
        HashMap<String, IData> hashMap8 = new HashMap<>();
        hashMap8.put("Scale", ExpandByte.asData((byte)2));
        Assembler.addRecipe(iItemStack31, iItemStack32.withTag(ExpandAnyDict.asData(hashMap8)), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 32702).amount(2), LiquidBracketHandler.getLiquid("molten.redalloy").withAmount(144), 1000,LV);
      IItemStack iItemStack33 = ItemBracketHandler.getItem("OpenBlocks:emptyMap", 0);
        HashMap<String, IData> hashMap9 = new HashMap<>();
        hashMap9.put("Scale", ExpandByte.asData((byte)4));
        IItemStack iItemStack34 = iItemStack33.withTag(ExpandAnyDict.asData(hashMap9));
        IItemStack iItemStack35 = ItemBracketHandler.getItem("OpenBlocks:emptyMap", 0);
        HashMap<String, IData> hashMap10 = new HashMap<>();
        hashMap10.put("Scale", ExpandByte.asData((byte)3));
        Assembler.addRecipe(iItemStack34, iItemStack35.withTag(ExpandAnyDict.asData(hashMap10)), ItemBracketHandler.getItem("IC2:itemPartCircuitAdv", 0).amount(2), LiquidBracketHandler.getLiquid("molten.glowstone").withAmount(144), 1200,LV);
      Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:cartographer", 0), ItemBracketHandler.getItem("OpenBlocks:generic", 9), ItemBracketHandler.getItem("minecraft:ender_eye", 0), LiquidBracketHandler.getLiquid("ender").withAmount(1000), 600, MV);

        Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:pedometer", 0), ItemBracketHandler.getItem("minecraft:clock", 0), ItemBracketHandler.getItem("IC2:itemPartCircuit", 0).amount(2), LiquidBracketHandler.getLiquid("molten.redstone").withAmount(144), 200,LV);
      Assembler.addRecipe(ItemBracketHandler.getItem("OpenBlocks:builder_guide", 0), ItemBracketHandler.getItem("OpenBlocks:guide", 0), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 24533), LiquidBracketHandler.getLiquid("molten.redstone").withAmount(288), 300, LMV);

        ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 15)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyeblack").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 14)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyered").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 13)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyegreen").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 12)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyebrown").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 11)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyeblue").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 10)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyepurple").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 9)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyecyan").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 8)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyelightgray").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 7)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyegray").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 6)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyepink").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 5)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyelime").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 4)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyeyellow").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 3)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyelightblue").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 2)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyemagenta").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 1)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyeorange").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator", 0)}, ItemBracketHandler.getItem("OpenBlocks:elevator", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyewhite").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 15)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyeblack").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 14)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyered").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 13)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyegreen").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 12)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyebrown").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 11)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyeblue").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 10)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyepurple").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 9)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyecyan").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 8)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyelightgray").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 7)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyegray").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 6)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyepink").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 5)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyelime").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 4)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyeyellow").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 3)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyelightblue").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 2)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyemagenta").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 1)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyeorange").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 0)}, ItemBracketHandler.getItem("OpenBlocks:elevator_rotating", 32767), LiquidBracketHandler.getLiquid("dye.watermixed.dyewhite").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack = new IItemStack[1];
        IItemStack iItemStack36 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap11 = new HashMap<>();
        hashMap11.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap11.put("Color", ExpandInt.toData(0x1E1B1B));
        arriItemStack[0] = iItemStack36.withTag(ExpandAnyDict.asData(hashMap11));
        ChemicalBath.addRecipe(arriItemStack, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyeblack").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack2 = new IItemStack[1];
        IItemStack iItemStack37 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap12 = new HashMap<>();
        hashMap12.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap12.put("Color", ExpandInt.toData(11743532));
        arriItemStack2[0] = iItemStack37.withTag(ExpandAnyDict.asData(hashMap12));
        ChemicalBath.addRecipe(arriItemStack2, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyered").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack3 = new IItemStack[1];
        IItemStack iItemStack38 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap13 = new HashMap<>();
        hashMap13.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap13.put("Color", ExpandInt.toData(3887386));
        arriItemStack3[0] = iItemStack38.withTag(ExpandAnyDict.asData(hashMap13));
        ChemicalBath.addRecipe(arriItemStack3, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyegreen").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack4 = new IItemStack[1];
        IItemStack iItemStack39 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap14 = new HashMap<>();
        hashMap14.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap14.put("Color", ExpandInt.toData(5320730));
        arriItemStack4[0] = iItemStack39.withTag(ExpandAnyDict.asData(hashMap14));
        ChemicalBath.addRecipe(arriItemStack4, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyebrown").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack5 = new IItemStack[1];
        IItemStack iItemStack40 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap15 = new HashMap<>();
        hashMap15.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap15.put("Color", ExpandInt.toData(2437522));
        arriItemStack5[0] = iItemStack40.withTag(ExpandAnyDict.asData(hashMap15));
        ChemicalBath.addRecipe(arriItemStack5, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyeblue").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack6 = new IItemStack[1];
        IItemStack iItemStack41 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap16 = new HashMap<>();
        hashMap16.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap16.put("Color", ExpandInt.toData(8073150));
        arriItemStack6[0] = iItemStack41.withTag(ExpandAnyDict.asData(hashMap16));
        ChemicalBath.addRecipe(arriItemStack6, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyepurple").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack7 = new IItemStack[1];
        IItemStack iItemStack42 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap17 = new HashMap<>();
        hashMap17.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap17.put("Color", ExpandInt.toData(2651799));
        arriItemStack7[0] = iItemStack42.withTag(ExpandAnyDict.asData(hashMap17));
        ChemicalBath.addRecipe(arriItemStack7, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyecyan").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack8 = new IItemStack[1];
        IItemStack iItemStack43 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap18 = new HashMap<>();
        hashMap18.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap18.put("Color", ExpandInt.toData(0xABABAB));
        arriItemStack8[0] = iItemStack43.withTag(ExpandAnyDict.asData(hashMap18));
        ChemicalBath.addRecipe(arriItemStack8, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyelightgray").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack9 = new IItemStack[1];
        IItemStack iItemStack44 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap19 = new HashMap<>();
        hashMap19.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap19.put("Color", ExpandInt.toData(0x434343));
        arriItemStack9[0] = iItemStack44.withTag(ExpandAnyDict.asData(hashMap19));
        ChemicalBath.addRecipe(arriItemStack9, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyegray").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack10 = new IItemStack[1];
        IItemStack iItemStack45 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap20 = new HashMap<>();
        hashMap20.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap20.put("Color", ExpandInt.toData(14188952));
        arriItemStack10[0] = iItemStack45.withTag(ExpandAnyDict.asData(hashMap20));
        ChemicalBath.addRecipe(arriItemStack10, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyepink").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack11 = new IItemStack[1];
        IItemStack iItemStack46 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap21 = new HashMap<>();
        hashMap21.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap21.put("Color", ExpandInt.toData(4312372));
        arriItemStack11[0] = iItemStack46.withTag(ExpandAnyDict.asData(hashMap21));
        ChemicalBath.addRecipe(arriItemStack11, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyelime").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack12 = new IItemStack[1];
        IItemStack iItemStack47 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap22 = new HashMap<>();
        hashMap22.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap22.put("Color", ExpandInt.toData(14602026));
        arriItemStack12[0] = iItemStack47.withTag(ExpandAnyDict.asData(hashMap22));
        ChemicalBath.addRecipe(arriItemStack12, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyeyellow").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack13 = new IItemStack[1];
        IItemStack iItemStack48 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap23 = new HashMap<>();
        hashMap23.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap23.put("Color", ExpandInt.toData(6719955));
        arriItemStack13[0] = iItemStack48.withTag(ExpandAnyDict.asData(hashMap23));
        ChemicalBath.addRecipe(arriItemStack13, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyelightblue").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack14 = new IItemStack[1];
        IItemStack iItemStack49 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap24 = new HashMap<>();
        hashMap24.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap24.put("Color", ExpandInt.toData(12801229));
        arriItemStack14[0] = iItemStack49.withTag(ExpandAnyDict.asData(hashMap24));
        ChemicalBath.addRecipe(arriItemStack14, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyemagenta").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack15 = new IItemStack[1];
        IItemStack iItemStack50 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap25 = new HashMap<>();
        hashMap25.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap25.put("Color", ExpandInt.toData(15435844));
        arriItemStack15[0] = iItemStack50.withTag(ExpandAnyDict.asData(hashMap25));
        ChemicalBath.addRecipe(arriItemStack15, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyeorange").withAmount(144), new int[]{10000}, 200, LV);
      IItemStack[] arriItemStack16 = new IItemStack[1];
        IItemStack iItemStack51 = ItemBracketHandler.getItem("OpenBlocks:imaginary", 1);
        HashMap<String, IData> hashMap26 = new HashMap<>();
        hashMap26.put("Uses", ExpandFloat.asData((float)10.0));
        hashMap26.put("Color", ExpandInt.toData(0xF0F0F0));
        arriItemStack16[0] = iItemStack51.withTag(ExpandAnyDict.asData(hashMap26));
        ChemicalBath.addRecipe(arriItemStack16, ItemBracketHandler.getItem("OpenBlocks:imaginary", 0), LiquidBracketHandler.getLiquid("dye.watermixed.dyewhite").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalBath.addRecipe(new IItemStack[]{ItemBracketHandler.getItem("OpenBlocks:goldenEye", 100)}, ItemBracketHandler.getItem("minecraft:ender_eye", 0), LiquidBracketHandler.getLiquid("molten.gold").withAmount(144), new int[]{10000}, 200, LV);
      ChemicalReactor.addRecipe(ItemBracketHandler.getItem("OpenBlocks:sponge", 0), null, ItemBracketHandler.getItem("minecraft:wool", 0), ItemBracketHandler.getItem("minecraft:slime_ball", 0), LiquidBracketHandler.getLiquid("water").withAmount(1000), 200,LV);
      Mixer.addRecipe(ItemBracketHandler.getItem("OpenBlocks:tastyClay", 0), null, new IIngredient[]{ItemBracketHandler.getItem("minecraft:clay_ball", 0), ItemBracketHandler.getItem("minecraft:dye", 3)}, LiquidBracketHandler.getLiquid("milk").withAmount(500), 100,ULV);
      Research.addResearch("GOLDENEGG", "MAGICBEES", "alienis 15, bestia 12, victus 9, humanus 6", -4, 5, 4, ItemBracketHandler.getItem("OpenBlocks:goldenegg", 0));
        MineTweakerAPI.game.setLocalization("tc.research_name.GOLDENEGG", "Golden Egg");
        MineTweakerAPI.game.setLocalization("tc.research_text.GOLDENEGG", "[OB] Make A MiniMe");
        Research.addPrereq("GOLDENEGG", "MB_DimensionalSingularity", false);
        Research.setConcealed("GOLDENEGG", true);
        Research.addPage("GOLDENEGG", "OpenBlocks.research_page.GOLDENEGG");
        MineTweakerAPI.game.setLocalization("OpenBlocks.research_page.GOLDENEGG", "The Golden Egg is a block from the OpenBlocks mod. This block is used to summon the Baby Mini Me. Before it hatches, it will begin to slowly spin in circles. After many spins, it will grow and emit large amounts of light. It will then float into the air, and explode. The explosion is minor, and should only break a single layer of standard resistance blocks. Right before it explodes, it will lift surrounding blocks into the air, then drop them back into place. Pictures of the hatching process can be found below.");
        Infusion.addRecipe("GOLDENEGG", ItemBracketHandler.getItem("minecraft:egg", 0), new IItemStack[]{ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 22086), ItemBracketHandler.getItem("minecraft:skull", 3), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 22086), ItemBracketHandler.getItem("minecraft:skull", 3), ItemBracketHandler.getItem("gregtech:gt.metaitem.01", 22086), ItemBracketHandler.getItem("minecraft:skull", 3)}, "alienis 75, bestia 50, victus 50, humanus 25", ItemBracketHandler.getItem("OpenBlocks:goldenegg", 0), 2);
        Research.addInfusionPage("GOLDENEGG", ItemBracketHandler.getItem("OpenBlocks:goldenegg", 0));
        Warp.addToResearch("GOLDENEGG", 2);
    }
}

